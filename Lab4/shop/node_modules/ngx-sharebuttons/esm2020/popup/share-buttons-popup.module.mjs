import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { SHARE_BUTTONS_CONFIG } from 'ngx-sharebuttons';
import { ShareButtonsModule } from 'ngx-sharebuttons/buttons';
import { ShareButtonsPopup } from './share-buttons-popup';
import { SharePopupService } from './share-popup.service';
import { SharePopupButtonsDirective } from './share-popup-buttons.directive';
import { SharePopupComponent } from './share-popup.component';
import * as i0 from "@angular/core";
export class ShareButtonsPopupModule {
    static withConfig(config) {
        return {
            ngModule: ShareButtonsModule,
            providers: [{ provide: SHARE_BUTTONS_CONFIG, useValue: config }]
        };
    }
}
ShareButtonsPopupModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ShareButtonsPopupModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
ShareButtonsPopupModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.0.0", ngImport: i0, type: ShareButtonsPopupModule, declarations: [ShareButtonsPopup,
        SharePopupButtonsDirective,
        SharePopupComponent], imports: [CommonModule,
        ShareButtonsModule], exports: [ShareButtonsModule,
        ShareButtonsPopup,
        SharePopupButtonsDirective,
        SharePopupComponent] });
ShareButtonsPopupModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ShareButtonsPopupModule, providers: [
        SharePopupService
    ], imports: [CommonModule,
        ShareButtonsModule, ShareButtonsModule] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.0.0", ngImport: i0, type: ShareButtonsPopupModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        ShareButtonsPopup,
                        SharePopupButtonsDirective,
                        SharePopupComponent
                    ],
                    imports: [
                        CommonModule,
                        ShareButtonsModule
                    ],
                    exports: [
                        ShareButtonsModule,
                        ShareButtonsPopup,
                        SharePopupButtonsDirective,
                        SharePopupComponent
                    ],
                    providers: [
                        SharePopupService
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmUtYnV0dG9ucy1wb3B1cC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtc2hhcmVidXR0b25zL3BvcHVwL3NyYy9zaGFyZS1idXR0b25zLXBvcHVwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFzQixvQkFBb0IsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzVFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTlELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOztBQXNCOUQsTUFBTSxPQUFPLHVCQUF1QjtJQUNsQyxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQTJCO1FBQzNDLE9BQU87WUFDTCxRQUFRLEVBQUUsa0JBQWtCO1lBQzVCLFNBQVMsRUFBRSxDQUFDLEVBQUMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUMsQ0FBQztTQUMvRCxDQUFDO0lBQ0osQ0FBQzs7b0hBTlUsdUJBQXVCO3FIQUF2Qix1QkFBdUIsaUJBbEJoQyxpQkFBaUI7UUFDakIsMEJBQTBCO1FBQzFCLG1CQUFtQixhQUduQixZQUFZO1FBQ1osa0JBQWtCLGFBR2xCLGtCQUFrQjtRQUNsQixpQkFBaUI7UUFDakIsMEJBQTBCO1FBQzFCLG1CQUFtQjtxSEFNVix1QkFBdUIsYUFKdkI7UUFDVCxpQkFBaUI7S0FDbEIsWUFYQyxZQUFZO1FBQ1osa0JBQWtCLEVBR2xCLGtCQUFrQjsyRkFTVCx1QkFBdUI7a0JBcEJuQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixpQkFBaUI7d0JBQ2pCLDBCQUEwQjt3QkFDMUIsbUJBQW1CO3FCQUNwQjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsWUFBWTt3QkFDWixrQkFBa0I7cUJBQ25CO29CQUNELE9BQU8sRUFBRTt3QkFDUCxrQkFBa0I7d0JBQ2xCLGlCQUFpQjt3QkFDakIsMEJBQTBCO3dCQUMxQixtQkFBbUI7cUJBQ3BCO29CQUNELFNBQVMsRUFBRTt3QkFDVCxpQkFBaUI7cUJBQ2xCO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuXHJcbmltcG9ydCB7IFNoYXJlQnV0dG9uc0NvbmZpZywgU0hBUkVfQlVUVE9OU19DT05GSUcgfSBmcm9tICduZ3gtc2hhcmVidXR0b25zJztcclxuaW1wb3J0IHsgU2hhcmVCdXR0b25zTW9kdWxlIH0gZnJvbSAnbmd4LXNoYXJlYnV0dG9ucy9idXR0b25zJztcclxuXHJcbmltcG9ydCB7IFNoYXJlQnV0dG9uc1BvcHVwIH0gZnJvbSAnLi9zaGFyZS1idXR0b25zLXBvcHVwJztcclxuaW1wb3J0IHsgU2hhcmVQb3B1cFNlcnZpY2UgfSBmcm9tICcuL3NoYXJlLXBvcHVwLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBTaGFyZVBvcHVwQnV0dG9uc0RpcmVjdGl2ZSB9IGZyb20gJy4vc2hhcmUtcG9wdXAtYnV0dG9ucy5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBTaGFyZVBvcHVwQ29tcG9uZW50IH0gZnJvbSAnLi9zaGFyZS1wb3B1cC5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIFNoYXJlQnV0dG9uc1BvcHVwLFxyXG4gICAgU2hhcmVQb3B1cEJ1dHRvbnNEaXJlY3RpdmUsXHJcbiAgICBTaGFyZVBvcHVwQ29tcG9uZW50XHJcbiAgXSxcclxuICBpbXBvcnRzOiBbXHJcbiAgICBDb21tb25Nb2R1bGUsXHJcbiAgICBTaGFyZUJ1dHRvbnNNb2R1bGVcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIFNoYXJlQnV0dG9uc01vZHVsZSxcclxuICAgIFNoYXJlQnV0dG9uc1BvcHVwLFxyXG4gICAgU2hhcmVQb3B1cEJ1dHRvbnNEaXJlY3RpdmUsXHJcbiAgICBTaGFyZVBvcHVwQ29tcG9uZW50XHJcbiAgXSxcclxuICBwcm92aWRlcnM6IFtcclxuICAgIFNoYXJlUG9wdXBTZXJ2aWNlXHJcbiAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2hhcmVCdXR0b25zUG9wdXBNb2R1bGUge1xyXG4gIHN0YXRpYyB3aXRoQ29uZmlnKGNvbmZpZz86IFNoYXJlQnV0dG9uc0NvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8U2hhcmVCdXR0b25zTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogU2hhcmVCdXR0b25zTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFt7cHJvdmlkZTogU0hBUkVfQlVUVE9OU19DT05GSUcsIHVzZVZhbHVlOiBjb25maWd9XVxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19